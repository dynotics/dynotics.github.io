---
import { Image } from "astro:assets";
import { projects } from "~/data/projects";
import Footer from "~/components/footer.astro";
import "~/styles/index.css";

export async function getStaticPaths() {
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;
---
<!doctype html>
<html lang="en" data-theme="light">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{project.title} | Dylan T. Chin</title>
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
  </head>

  <body class="bg-default text-default text-base">
    <main class="px-8 py-24 space-y-16">
      <a href="/" class="text-2xl bg-gradient-to-r from-[#c6e5ea] via-[#8ea8c1] to-[#6780ac] bg-clip-text text-transparent font-semibold">
        ← Back to Home
      </a>

      <section class="grid md:grid-cols-2 gap-12 items-start">
        <!-- project cover -->
        <Image src={project.image} alt={project.title} class="shadow-lg w-full object-cover" />
        
        <!-- desc -->
        <div>
          <div class="flex items-center gap-3 mb-4">
            <h1 class="text-4xl font-extrabold bg-gradient-to-r from-[#c6e5ea] via-[#8ea8c1] to-[#6780ac] bg-clip-text text-transparent">
              {project.title}
            </h1>
            {project.icon && (
              <Image src={project.icon} alt="" class="w-16 h-16 object-contain" />
            )}
          </div>

          <p class="opacity-90">{project.description}</p>

          <h2 class="mt-8 text-2xl font-bold bg-gradient-to-r from-[#c6e5ea] via-[#8ea8c1] to-[#6780ac] bg-clip-text text-transparent">
            Credits
          </h2>
          <ul class="mt-4 space-y-1">
            {project.credits.map((c) => (
              <li><strong>{c.name}</strong> — {c.role}</li>
            ))}
          </ul>

          {project.footageLink && (
            <a href={project.footageLink} target="_blank"
              class="mt-8 mr-4 inline-block px-6 py-3 text-white font-semibold transition"
              style="background-color: var(--color-secondary);"
            >
              Watch Gameplay Footage
            </a>
          )}

          {project.gameplayLink && (
            <a href={project.gameplayLink} target="_blank"
              class="mt-4 inline-block px-6 py-3 text-white font-semibold transition"
              style="background-color: var(--color-primary);"
            >
              Play on Itch.io
            </a>
          )}
        </div>
      </section>

      <!-- re-worked project sections + extra sections for lore/art -->
      {project.sections && (
        <section class="space-y-16">
          {project.sections.map((section) => (
            <div>
              <h2 class="text-3xl font-bold mb-6 bg-gradient-to-r from-[#c6e5ea] via-[#8ea8c1] to-[#6780ac] bg-clip-text text-transparent">
                {section.title}
              </h2>

              <div class="space-y-12">
                {section.entries.map((entry) => (
                  <div>
                    {entry.name && <h3 class="text-xl font-semibold mb-2">{entry.name}</h3>}
                    {entry.text && <p class="mb-4 opacity-90">{entry.text}</p>}

                    {entry.images && (
                      <!-- image row -->
                      <div class="flex flex-wrap justify-center gap-3">
                        {entry.images.map((img) => {
                          // default img/gif size
                          let sizeClass = "max-w-3xl w-full";

                          // handle special cases (six)
                          const filename = typeof img === "string" ? img.toLowerCase() : img.src.toLowerCase();

                          if (filename.includes("totem")) {
                            sizeClass = "w-[110px] h-auto"; 
                          } else if (filename.includes("capybara") || filename.includes("ff")) {
                            sizeClass = "w-64 h-auto";
                          }

                          return typeof img === "string" ? (
                            <img src={img} alt={entry.name || section.title} class={`shadow-md rounded-lg object-contain ${sizeClass}`} />
                          ) : (
                            <Image src={img} alt={entry.name || section.title} class={`shadow-md rounded-lg object-contain ${sizeClass}`} />
                          );
                        })}
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </div>
          ))}
        </section>
      )}
    </main>

    <Footer />
  </body>
</html>
